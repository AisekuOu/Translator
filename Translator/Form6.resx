<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblCheck.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAASKSURBVGhD5VlbqA1RGD4v8iYpDyLOmbWOIqEkuSS5i3LLJXIJESHlwZ41W503RJTycNyeRETi
        QcqDF3I7HM7s2TsdDxI5iVwKUTq+f/fvba2Zcew5M3Omna/+Zu/1/+u/rNv865+G/xquzM1wLdXiSXXG
        E84tT6jnoO8FobpADwvSuVyQ6qhnOWs7Zcsw7pYtXGlvhpNX4eBHUHcU8ix1v2AhIGmPZnV9B4zkPDhx
        0+9UL+kzzRxmZQCrTw/3YQRL4HSIE1VyhfqG5zPQlYKwD+F5Cs/baH9dkQkjLLsC5DawqeThNudHwdBd
        v+EyWaoda/wY7QMWD4U3rGUQ7QHXss+hz4dQXUK1snhycIWzNMQQCCNr2ctYLBKej3SG0gzxjBl6sa9c
        FosPjOwOvwHQF+yDLSwSC26TGgt9F3z6ibpYpPegJRFQbKnSU8seySKJAQN1wm8L++Iws6OjU9qDoaTT
        UCrVA2anApxGCw17IE/Y25gdDejcaipz3jIrVXjSWWHaVd0dIjeB2bWBOviUfMeLZxazUwdm+qDPfrST
        iToYChLasFFQflNrPtQ8C8HRt28zKzF4Iieh+wbpxnM9Nxug94XpR42zAKV5vWNvz/meAL1fdBvtjblG
        ZhkAD0GyH0J9am9sGcisv0OfOvrNzYmhaOWbK/orREkhsw10CLVRl6P/zAoHpwt/FCPJYlaioHRbt8PN
        AfBRXpWjzJdZ4SCH9Q7PGu1JzEoUlZyIjsx/3Q14n1R94uZw0GVEE/7JzZkCa9/RfEImsG84s4LwTW38
        XCQB4BDZrvmEAJxpzAqCroGacJGbM4Urcqs0n+hgWcOsIPgOWxG+w82ZAqfWbM0nzICdY1YQlO/8EXae
        cHOm8GfE2BN7mRUEZuCeJvyKmzNFIABLbWJWEBDQLxZfuTlT+AMoCnsJs4LAuXxAF6achVmZoThCDan6
        hHs03eCYFYQ/WiypXczKFHSthS9HMKDzuenvwCZ5pwVxg5vrBzh9TmoBRL8NZQ04vVoPAJR8nSZtwOk2
        PYh6nIWtegDIRy4xq34Ax41Z6MsgYK+VSpWxKte4Ja3TAyiTpY4yOxXQlRHHJZXry/ao4BsrCKqMGQGA
        0rql0b3Yf3khih0ElFzzK8W74jizEwFGfUG5wu2zU6H4MxH+TYD2yFYW6RVc4UzBqJ/36SV6A/qlt8UP
        QqqVukKN2pCj74mi3JX5uci7zoboIrpWosAsZzl+/9B5CSwneyqm+7Gu1CAsA9ojMLQT/1cj8ZpTsvKL
        itJZh7bdXDQwC8Ym7W+b0NqPzTV0SGcxlutXXSZ2EJ1yV38ccTlfzhSXHtI+YBMGEDRVrD/p8rGDIGAZ
        CIz4CQRiKI9CcPpij/k9g5Yc5N+bfRMIgkBnN1XM9PO7B6LPsY/K1eem/eNYRU3wRH4m+tI356q+xILQ
        QXUbKn1Q9YAu4FQ2LDY703us59SIjqZ90zFQxtfOVIJIEyVpT4bjL+s6iIKVmwjHX+hBYD9eZ3Z9oNCs
        xmMvlSoBYGm9YVb9oCjUGBp5WkJp5Wh9iIaG3yOaNzniSWwiAAAAAElFTkSuQmCC
</value>
  </data>
</root>